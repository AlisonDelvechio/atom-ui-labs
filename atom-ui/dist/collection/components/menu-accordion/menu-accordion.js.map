{"version":3,"file":"menu-accordion.js","sourceRoot":"","sources":["../../../src/components/menu-accordion/menu-accordion.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAQ1D,MAAM,OAAO,aAAa;IAChB,OAAO,GAAW,EAAE,CAAC;IACrB,MAAM,GAAqB,KAAK,CAAC;IACjC,QAAQ,GAAY,KAAK,CAAC;IAC1B,KAAK,GAAa,EAAE,CAAC;IAEpB,UAAU,CAAU;IAE7B,iBAAiB;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC;IAClC,CAAC;IAEO,gBAAgB;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC/E,CAAC;IAEO,iBAAiB;QACvB,OAAO,CACL,WAAK,KAAK,EAAC,MAAM,EAAC,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,OAAO,EAAC,WAAW;YAC1D,YAAM,CAAC,EAAC,+CAA+C,GAAG,CACtD,CACP,CAAC;IACJ,CAAC;IAEO,iBAAiB;QACvB,OAAO,CACL,WAAK,KAAK,EAAC,MAAM,EAAC,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,OAAO,EAAC,WAAW;YAC1D,YAAM,CAAC,EAAC,gDAAgD,GAAG,CACvD,CACP,CAAC;IACJ,CAAC;IAEO,mBAAmB;QACzB,OAAO,CACL,WAAK,KAAK,EAAC,MAAM,EAAC,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,OAAO,EAAC,WAAW;YAC1D,YAAM,CAAC,EAAC,oBAAoB,GAAG,CAC3B,CACP,CAAC;IACJ,CAAC;IAED,eAAe;QACb,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACrC,CAAC;IAED,MAAM;QACJ,OAAO,CACL,4DAAK,KAAK,EAAE,aAAa,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE;YACzE,+DACE,KAAK,EAAC,kBAAkB,EACxB,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,mBACtB,IAAI,CAAC,UAAU;gBAE9B,6DAAM,KAAK,EAAC,OAAO,IAAE,IAAI,CAAC,OAAO,CAAQ;gBACxC,IAAI,CAAC,gBAAgB,EAAE,CACjB;YAER,IAAI,CAAC,UAAU,IAAI,CAClB,4DAAK,KAAK,EAAC,mBAAmB,IAC3B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CACxB,WAAK,KAAK,EAAC,gBAAgB;gBACzB,gBAAO,IAAI,CAAQ;gBAClB,IAAI,CAAC,mBAAmB,EAAE,CACvB,CACP,CAAC,CACE,CACP,CACG,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, State, h } from '@stencil/core';\n\n@Component({\n  tag: 'menu-accordion',\n  styleUrl: 'menu-accordion.scss',\n  // shadow: true,\n  shadow: false, //false apenas para teste\n})\nexport class MenuAccordion {\n  @Prop() heading: string = '';\n  @Prop() device: 'web' | 'mobile' = 'web';\n  @Prop() expanded: boolean = false;\n  @Prop() items: string[] = [];\n\n  @State() isExpanded: boolean;\n\n  componentWillLoad() {\n    this.isExpanded = this.expanded;\n  }\n\n  private renderExpandIcon() {\n    return this.isExpanded ? this.getExpandLessIcon() : this.getExpandMoreIcon();\n  }\n\n  private getExpandMoreIcon() {\n    return (\n      <svg class=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6z\" />\n      </svg>\n    );\n  }\n\n  private getExpandLessIcon() {\n    return (\n      <svg class=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z\" />\n      </svg>\n    );\n  }\n\n  private getChevronRightIcon() {\n    return (\n      <svg class=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M10 17l5-5-5-5v10z\" />\n      </svg>\n    );\n  }\n\n  toggleAccordion() {\n    this.isExpanded = !this.isExpanded;\n  }\n\n  render() {\n    return (\n      <div class={`accordion ${this.device} ${this.isExpanded ? 'expanded' : ''}`}>\n        <button\n          class=\"accordion-header\"\n          onClick={() => this.toggleAccordion()}\n          aria-expanded={this.isExpanded}\n        >\n          <span class=\"title\">{this.heading}</span>\n          {this.renderExpandIcon()}\n        </button>\n\n        {this.isExpanded && (\n          <div class=\"accordion-content\">\n            {this.items.map((item) => (\n              <div class=\"accordion-item\">\n                <span>{item}</span>\n                {this.getChevronRightIcon()}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}"]}