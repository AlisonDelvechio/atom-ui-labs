{"version":3,"names":["atomAlertCss","AtomAlert","device","status","icon","text","textColor","iconColor","strokeColor","hasCloseIcon","hasStatusIcon","atomClick","handleClick","this","emit","renderIcon","iconClass","icons","check","h","viewBox","class","width","height","d","fill","stroke","error","cx","cy","r","x1","y1","x2","y2","warning","info","renderCloseIcon","onClick","render","classes","join","key"],"sources":["src/components/atom-alert/atom-alert.scss?tag=atom-alert&encapsulation=shadow","src/components/atom-alert/atom-alert.tsx"],"sourcesContent":["@use '../../styles/variables' as *;\n\n// ===========================\n// Base alert layout\n// ===========================\n.alert {\n  height: 44px;\n  width: 30.5rem;\n  max-width: 1216px;\n  min-width: 384px;\n  border-radius: $alert-radius;\n  padding: $alert-padding;\n  display: flex;\n  align-items: center;\n  font-family: $font-family-base;\n  box-sizing: border-box;\n  box-shadow: $alert-box-shadow;\n  gap: 0.5rem;\n\n  &.alert--mobile {\n    width: 19.5rem;\n    height: 60px;\n  }\n\n  &.alert--success {\n    background-color: $alert-success-bg;\n    border: 1px solid $alert-success-border;\n  }\n\n  &.alert--error {\n    background-color: $alert-error-bg;\n    border: 1px solid $alert-error-border;\n  }\n\n  &.alert--warning {\n    background-color: $alert-warning-bg;\n    border: 1px solid $alert-warning-border;\n  }\n\n  &.alert--info {\n    background-color: $alert-info-bg;\n    border: 1px solid $alert-info-border;\n  }\n}\n\n// ===========================\n// Content\n// ===========================\n.content {\n  flex: 1;\n  font-size: $font-size-base;\n  line-height: 1.4;\n  word-break: break-word;\n}\n\n// ===========================\n// SVG Icon\n// ===========================\n.icon {\n  width: 1.5rem;\n  height: 1.5rem;\n  flex-shrink: 0;\n}\n\n// ===========================\n// Close button\n// ===========================\n.close-icon {\n  background: transparent;\n  border: none;\n  font-size: 1.25rem;\n  cursor: pointer;\n  padding: 0;\n  line-height: 1;\n}\n\n// ===========================\n// Text color utility classes\n// ===========================\n.text-red-700    { color: $red-700; }\n.text-green-700  { color: $green-700; }\n.text-yellow-700 { color: $yellow-700; }\n.text-blue-700   { color: $blue-700; }\n.text-gray-700   { color: $gray-700; }\n\n// ===========================\n// Icon color utility classes\n// ===========================\n.icon-red-600    { color: $red-600; }\n.icon-green-600  { color: $green-600; }\n.icon-yellow-600 { color: $yellow-600; }\n.icon-blue-600   { color: $blue-600; }\n.icon-gray-600   { color: $gray-600; }\n\n// ===========================\n// Stroke color utility classes (bordas)\n// ===========================\n.stroke-red-200    { border-left-color: #fecaca; }\n.stroke-green-200  { border-left-color: #bbf7d0; }\n.stroke-yellow-200 { border-left-color: #979471; }\n.stroke-blue-200   { border-left-color: #bfdbfe; }\n.stroke-gray-200   { border-left-color: #e5e7eb; }","import { Component, Prop, Event, EventEmitter, h } from '@stencil/core';\n\n@Component({\n  tag: 'atom-alert',\n  styleUrl: 'atom-alert.scss',\n  shadow: true,\n})\nexport class AtomAlert {\n  @Prop() device: 'web' | 'mobile' = 'web';\n  @Prop() status: 'success' | 'error' | 'warning' | 'info' = 'info';\n  @Prop() icon: 'check' | 'error' | 'warning' | 'info' = 'info';\n  @Prop() text: string;\n  @Prop({ attribute: 'textcolor' }) textColor: string;\n  @Prop({ attribute: 'iconcolor' }) iconColor: string; \n  @Prop({ attribute: 'strokecolor' }) strokeColor: string;\n  @Prop({ attribute: 'hascloseicon' }) hasCloseIcon: boolean = false;\n  @Prop({ attribute: 'hasstatusicon' }) hasStatusIcon: boolean = true;\n  @Event() atomClick: EventEmitter<void>;\n\n  private handleClick = () => {\n    this.atomClick.emit();\n  };\n\n  private renderIcon() {\n    if (!this.hasStatusIcon) return null;\n\n    const iconClass = `icon ${this.iconColor || ''}`;\n\n    const icons = {\n      check: (\n        <svg viewBox=\"0 0 24 24\" class={iconClass} width=\"24\" height=\"24\">\n          <path d=\"M20 6L9 17l-5-5\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" />\n        </svg>\n      ),\n      error: (\n        <svg viewBox=\"0 0 24 24\" class={iconClass} width=\"24\" height=\"24\">\n          <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" />\n          <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\" stroke=\"currentColor\" stroke-width=\"2\" />\n          <circle cx=\"12\" cy=\"16\" r=\"1\" fill=\"currentColor\" />\n        </svg>\n      ),\n      warning: (\n        <svg viewBox=\"0 0 24 24\" class={iconClass} width=\"24\" height=\"24\">\n          <path d=\"M12 2L2 22h20L12 2z\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" />\n          <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"14\" stroke=\"currentColor\" stroke-width=\"2\" />\n          <circle cx=\"12\" cy=\"17\" r=\"1\" fill=\"currentColor\" />\n        </svg>\n      ),\n      info: (\n        <svg viewBox=\"0 0 24 24\" class={iconClass} width=\"24\" height=\"24\">\n          <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" />\n          <line x1=\"12\" y1=\"10\" x2=\"12\" y2=\"16\" stroke=\"currentColor\" stroke-width=\"2\" />\n          <circle cx=\"12\" cy=\"7\" r=\"1\" fill=\"currentColor\" />\n        </svg>\n      ),\n    };\n\n    return icons[this.icon] || icons['info'];\n  }\n\n  private renderCloseIcon() {\n    if (!this.hasCloseIcon) return null;\n\n    return (\n      <button\n        class={`close-icon ${this.iconColor || ''}`}\n        aria-label=\"Fechar alerta\"\n        onClick={this.handleClick}\n      >\n        âœ–\n      </button>\n    );\n  }\n\n  render() {\n    const classes = [\n      'alert',\n      `alert--${this.status}`,\n      this.device === 'mobile' ? 'alert--mobile' : '',\n      this.strokeColor,\n    ].join(' ');\n\n    return (\n      <div class={classes}>\n        {this.renderIcon()}\n        <div class={`content ${this.textColor || ''}`}>\n          {this.text}\n        </div>\n        {this.renderCloseIcon()}\n      </div>\n    );\n  }\n}"],"mappings":"6CAAA,MAAMA,EAAe,gxC,MCORC,EAAS,M,4DACZC,OAA2B,MAC3BC,OAAmD,OACnDC,KAA+C,OAC/CC,KAC0BC,UACAC,UACEC,YACCC,aAAwB,MACvBC,cAAyB,KACtDC,UAEDC,YAAc,KACpBC,KAAKF,UAAUG,MAAM,EAGf,UAAAC,GACN,IAAKF,KAAKH,cAAe,OAAO,KAEhC,MAAMM,EAAY,QAAQH,KAAKN,WAAa,KAE5C,MAAMU,EAAQ,CACZC,MACEC,EAAA,OAAKC,QAAQ,YAAYC,MAAOL,EAAWM,MAAM,KAAKC,OAAO,MAC3DJ,EAAA,QAAMK,EAAE,kBAAkBC,KAAK,OAAOC,OAAO,eAAc,eAAc,OAG7EC,MACER,EAAA,OAAKC,QAAQ,YAAYC,MAAOL,EAAWM,MAAM,KAAKC,OAAO,MAC3DJ,EAAQ,UAAAS,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKL,KAAK,OAAOC,OAAO,eAA4B,qBAC9EP,EAAM,QAAAY,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKR,OAAO,eAA4B,qBACxEP,EAAA,UAAQS,GAAG,KAAKC,GAAG,KAAKC,EAAE,IAAIL,KAAK,kBAGvCU,QACEhB,EAAA,OAAKC,QAAQ,YAAYC,MAAOL,EAAWM,MAAM,KAAKC,OAAO,MAC3DJ,EAAA,QAAMK,EAAE,sBAAsBC,KAAK,OAAOC,OAAO,eAAc,eAAc,MAC7EP,EAAM,QAAAY,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKR,OAAO,eAA4B,qBACxEP,EAAA,UAAQS,GAAG,KAAKC,GAAG,KAAKC,EAAE,IAAIL,KAAK,kBAGvCW,KACEjB,EAAA,OAAKC,QAAQ,YAAYC,MAAOL,EAAWM,MAAM,KAAKC,OAAO,MAC3DJ,EAAQ,UAAAS,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKL,KAAK,OAAOC,OAAO,eAA4B,qBAC9EP,EAAM,QAAAY,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKR,OAAO,eAA4B,qBACzEP,EAAA,UAAQS,GAAG,KAAKC,GAAG,IAAIC,EAAE,IAAIL,KAAK,mBAKxC,OAAOR,EAAMJ,KAAKT,OAASa,EAAM,O,CAG3B,eAAAoB,GACN,IAAKxB,KAAKJ,aAAc,OAAO,KAE/B,OACEU,EAAA,UACEE,MAAO,cAAcR,KAAKN,WAAa,KAC5B,6BACX+B,QAASzB,KAAKD,aAGP,I,CAIb,MAAA2B,GACE,MAAMC,EAAU,CACd,QACA,UAAU3B,KAAKV,SACfU,KAAKX,SAAW,SAAW,gBAAkB,GAC7CW,KAAKL,aACLiC,KAAK,KAEP,OACEtB,EAAA,OAAAuB,IAAA,2CAAKrB,MAAOmB,GACT3B,KAAKE,aACNI,EAAA,OAAAuB,IAAA,2CAAKrB,MAAO,WAAWR,KAAKP,WAAa,MACtCO,KAAKR,MAEPQ,KAAKwB,kB","ignoreList":[]}