{"version":3,"names":["atomButtonCss","AtomButton","label","type","variant","atomClick","handleClick","this","emit","render","h","key","class","onClick"],"sources":["src/components/atom-button/atom-button.scss?tag=atom-button&encapsulation=shadow","src/components/atom-button/atom-button.tsx"],"sourcesContent":[":host {\n  display: inline-block;\n}\n\n.atom-button {\n  padding: 0.6rem 1.2rem;\n  border-radius: 8px;\n  border: none;\n  cursor: pointer;\n  font-weight: 600;\n  transition: background 0.3s;\n\n  &.primary {\n    background-color: #007bff;\n    color: white;\n  }\n\n  &.secondary {\n    background-color: #6c757d;\n    color: white;\n  }\n\n  &:hover {\n    opacity: 0.85;\n  }\n}","import { Component, Prop, Event, EventEmitter, h } from '@stencil/core';\n\n@Component({\n  tag: 'atom-button',\n  styleUrl: 'atom-button.scss',\n  shadow: true,\n})\nexport class AtomButton {\n  /** Texto opcional para acessibilidade */\n  @Prop() label: string;\n\n  /** Tipo do botão (button, submit, etc) */\n  @Prop() type: 'button' | 'submit' | 'reset' = 'button';\n\n  /** Estilo customizável */\n  @Prop() variant: 'primary' | 'secondary' = 'primary';\n\n  /** Evento emitido ao clicar */\n  @Event() atomClick: EventEmitter<void>;\n\n  private handleClick = () => {\n    this.atomClick.emit();\n  };\n\n  render() {\n    return (\n      <button\n        type={this.type}\n        class={`atom-button ${this.variant}`}\n        onClick={this.handleClick}\n        aria-label={this.label}\n      >\n        <slot />\n      </button>\n    );\n  }\n}"],"mappings":"kDAAA,MAAMA,EAAgB,+S,MCOTC,EAAU,M,4DAEbC,MAGAC,KAAsC,SAGtCC,QAAmC,UAGlCC,UAEDC,YAAc,KACpBC,KAAKF,UAAUG,MAAM,EAGvB,MAAAC,GACE,OACEC,EACE,UAAAC,IAAA,2CAAAR,KAAMI,KAAKJ,KACXS,MAAO,eAAeL,KAAKH,UAC3BS,QAASN,KAAKD,YAAW,aACbC,KAAKL,OAEjBQ,EAAQ,QAAAC,IAAA,6C","ignoreList":[]}