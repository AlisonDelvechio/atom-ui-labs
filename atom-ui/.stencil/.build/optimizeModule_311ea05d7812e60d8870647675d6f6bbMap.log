{"version":3,"names":["menuAccordionCss","MenuAccordion","heading","device","expanded","items","isExpanded","componentWillLoad","this","toggleAccordion","render","h","key","class","onClick","map","item"],"sources":["src/components/menu-accordion/menu-accordion.scss?tag=menu-accordion&encapsulation=shadow","src/components/menu-accordion/menu-accordion.tsx"],"sourcesContent":["@use '../../styles/variables' as *;\n\n.accordion {\n  border: 1px solid $gray-300;\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: $gray-50;\n\n  &.mobile {\n    font-size: 0.9rem;\n  }\n\n  &.web {\n    font-size: 1rem;\n  }\n\n  .accordion-header {\n    background-color: $gray-100;\n    padding: 1rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    cursor: pointer;\n\n    .title {\n      font-weight: bold;\n    }\n\n    .icon {\n      font-size: 1.2rem;\n    }\n  }\n\n  .accordion-content {\n    padding: 0.5rem 1rem;\n    background-color: white;\n\n    .accordion-item {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.5rem 0;\n      border-bottom: 1px solid $gray-100;\n\n      .material-icons.icon {\n        margin-left: auto;\n      }\n\n      span:first-child {\n        margin-right: 0.5rem;\n      }\n\n      &:last-child {\n        border-bottom: none;\n      }\n    }\n  }\n}","import { Component, Prop, State, h } from '@stencil/core';\n\n@Component({\n  tag: 'menu-accordion',\n  styleUrl: 'menu-accordion.scss',\n  shadow: true,\n})\nexport class MenuAccordion {\n  @Prop() heading: string = '';\n  @Prop() device: 'web' | 'mobile' = 'web';\n  @Prop() expanded: boolean = false;\n  @Prop() items: string[] = [];\n\n  @State() isExpanded: boolean;\n\n  componentWillLoad() {\n    this.isExpanded = this.expanded;\n  }\n\n  toggleAccordion() {\n    this.isExpanded = !this.isExpanded;\n  }\n\n  render() {\n    return (\n      <div class={`accordion ${this.device}`}>\n        <div class=\"accordion-header\" onClick={() => this.toggleAccordion()}>\n          <span class=\"title\">{this.heading}</span>\n          <span class=\"material-icons icon\">\n            {this.isExpanded ? 'expand_less' : 'expand_more'}\n          </span>\n        </div>\n\n        {this.isExpanded && (\n          <div class=\"accordion-content\">\n            {this.items.map((item) => (\n              <div class=\"accordion-item\">\n                <span class=\"material-icons icon\">chevron_right</span>\n                <span>{item}</span>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}"],"mappings":"2CAAA,MAAMA,EAAmB,q3B,MCOZC,EAAa,M,yBAChBC,QAAkB,GAClBC,OAA2B,MAC3BC,SAAoB,MACpBC,MAAkB,GAEjBC,WAET,iBAAAC,GACEC,KAAKF,WAAaE,KAAKJ,Q,CAGzB,eAAAK,GACED,KAAKF,YAAcE,KAAKF,U,CAG1B,MAAAI,GACE,OACEC,EAAA,OAAAC,IAAA,2CAAKC,MAAO,aAAaL,KAAKL,UAC5BQ,EAAA,OAAAC,IAAA,2CAAKC,MAAM,mBAAmBC,QAAS,IAAMN,KAAKC,mBAChDE,EAAA,QAAAC,IAAA,2CAAMC,MAAM,SAASL,KAAKN,SAC1BS,EAAA,QAAAC,IAAA,2CAAMC,MAAM,uBACTL,KAAKF,WAAa,cAAgB,gBAItCE,KAAKF,YACJK,EAAA,OAAAC,IAAA,2CAAKC,MAAM,qBACRL,KAAKH,MAAMU,KAAKC,GACfL,EAAA,OAAKE,MAAM,kBACTF,EAAM,QAAAE,MAAM,uBAA0C,iBACtDF,EAAO,YAAAK,O","ignoreList":[]}